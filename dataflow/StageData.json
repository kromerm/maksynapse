{
	"name": "StageData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movie_dataflow_source1",
						"type": "DatasetReference"
					},
					"name": "FileSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetStage",
						"type": "DatasetReference"
					},
					"name": "StageData"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as integer,\n\t\tRating as integer,\n\t\t{Rotton Tomato} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FileSource\nSelect1 derive(dateOfETL = currentDate()) ~> DerivedColumn1\nFileSource select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\tRating,\n\t\tRottenTomato = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Select1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'movies[n].parquet',\n\ttruncate: true,\n\tpartitionBy('roundRobin', 10)) ~> StageData"
		}
	}
}