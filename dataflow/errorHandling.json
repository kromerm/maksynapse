{
	"name": "errorHandling",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"name": "errorRows"
				},
				{
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"name": "goodRows"
				}
			],
			"transformations": [
				{
					"name": "typeConversions"
				},
				{
					"name": "checkForNulls"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(movie = toInteger(movie),\n\t\tnewtitle = toInteger(title)) ~> typeConversions\ntypeConversions split(isNull(movie) || isNull(newtitle),\n\tdisjoint: false) ~> checkForNulls@(errorRows, goodRows)\ncheckForNulls@errorRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['errorRows.csv'],\n\tpartitionBy('hash', 1)) ~> errorRows\ncheckForNulls@goodRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['goodRows.csv'],\n\tpartitionBy('hash', 1)) ~> goodRows"
		}
	}
}