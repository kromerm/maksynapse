{
	"name": "moviesCsvToJSON-Cosmos",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "moviesCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cosmosMovies",
						"type": "DatasetReference"
					},
					"name": "loadCosmos"
				}
			],
			"transformations": [
				{
					"name": "MakeHierarchy"
				},
				{
					"name": "Dedupe"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as integer,\n\t\tRating as integer,\n\t\t{Rotton Tomato} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> moviesCSV\nmoviesCSV derive(movies = @(title=title,\n\t\tgenres=split(genres,'|'),\n\t\tyear=year,\n\t\trating=Rating)) ~> MakeHierarchy\nMakeHierarchy aggregate(groupBy(moviegrp = movie),\n\tid = first(movie),\n\t\tmovies = first(movies),\n\t\ttitlekey = first(title)) ~> Dedupe\nDedupe sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'document',\n\tpartitionKey: ['/titlekey'],\n\tthroughput: 2000) ~> loadCosmos"
		}
	}
}